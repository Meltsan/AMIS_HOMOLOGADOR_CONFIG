buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath ("com.bmuschko:gradle-docker-plugin:3.6.2")
        classpath ("com.google.cloud.tools:appengine-gradle-plugin:1.3.3")
        classpath ("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2")


    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'com.google.cloud.tools.appengine'
apply plugin: "org.sonarqube"
apply plugin: "jacoco"

group = 'com.homologador.cloud.config'
version = '0.0.1-SNAPSHOT'
project.version = {BUILD_NUMBER}
sourceCompatibility = 1.8



ext {
    springCloudVersion = 'Finchley.SR1'
}

bootJar {
    baseName = 'homologador-cloud-config'
    version = ''
}

task createDockerfile(type: com.bmuschko.gradle.docker.tasks.image.Dockerfile) {

    destFile = project.file('build/libs/Dockerfile')
    from 'openjdk:8u181-jre-slim-stretch'
    copyFile "homologador-cloud-config.jar", '/opt/homologador-cloud-config.jar'
    exposePort 8001
    entryPoint 'java -Xmx2048k -Xmx512m -Xmx8g', '-jar', '/opt/homologador-cloud-config.jar'
}

task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
    dependsOn 'build'
    def repositoryName = project.name.replace(' ', '').toLowerCase()
    println "Name: '${repositoryName}'"
    dependsOn createDockerfile
    inputDir = createDockerfile.destFile.parentFile

    println "Succes buildImage"
    tag = "gcr.io/amis-homologador/${repositoryName}:${project.version}".toLowerCase()
}




dependencies {
    implementation('org.springframework.cloud:spring-cloud-config-server')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
